<?php

/**
 * Implements hook_menu()
 */
function message_library_exposedfilters_menu() {
  $items = array();
  $items['message-library-filter-threat-by-issue'] = array(
    'title' => 'Filter threat by issue',
    'page callback' => 'message_library_exposedfilter_filter_threat_by_issue_callback',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  return $items;
}

function message_library_exposedfilters_views_api() {
  return array(
      'api' => 3,
  );
}

/**
 * Ajax page callback
 */
function message_library_exposedfilter_filter_threat_by_issue_callback($tid) {
  $items = array();
  if ($tid !== 'All') {
    $items = message_library_get_threat_by_issue($tid);
    $items = drupal_map_assoc($items);
  }
  return drupal_json_output($items);
}

/**
 * Implements hook_theme()
 */
function message_library_exposedfilters_theme($existing, $type, $theme, $path) {
  return array(
    'current_selected_criteria' => array(
      'template' => 'templates/message_library_exposedfilters_current_selected_criteria',
    ),
  );
}

/**
 * Implements hook_views_pre_render()
 */
function message_library_exposedfilters_views_pre_render(&$view) {
  // This will prepend a 'Currently Selected Criteria' section to the views
  // Message Library's result
  if ($view->name != 'message_library') return;
  if (empty($view->exposed_input)) return;

  $vars = array();
  foreach($view->exposed_input as $key => $val) {
    switch ($key) {
      // 1. Text field, as assign it is
      case 'ml_search_text':
        if ($val == 'enter search terms') {
          $vars[$key] = '';
        }
        else {
          $vars[$key] = !empty($val) ? $val : '';
        }
        break;
      // 2. For vocabularies, load and assign term name
      case 'issue':
      case 'at_risk_group':
      case 'target_audience':
      case 'threat':
        if ((int) $val) { // option 'All' will be cast to 0 and ignored
          $term = taxonomy_term_load($val);
          if ($term) {
            $vars[$key] = $term->name;
          }
        }
        else {
          $vars[$key] = '';
        }
        break;
    }
  }

  // Add a summary text like '800 records matched criteria.', just as the one
  // displayed in the footer
  $vars['total_rows'] = !empty($view->total_rows) ? $view->total_rows : 0;
  $vars['total_rows_text'] = t('<strong>@count</strong> records matched criteria.',
      array('@count' => $vars['total_rows']));

  $view->attachment_before .= theme('current_selected_criteria', $vars);
}

function message_library_exposedfilters_views_pre_build(view &$view) {
  if ($view->name != 'message_library') return;
  // this handles the sinario when the user select a sector term, and then
  // switch to the 'Alphabetically' display mode, there will be a illegal option
  // error.
  $input = $view->get_exposed_input();
  if (isset($input['iss_mode']) && $input['iss_mode'] == '0' && !empty($input['issue']) && $input['issue'] != 'All') {
    if (($term = taxonomy_term_load($input['issue'])) && $term->vocabulary_machine_name != 'issues') {
      $input['issue'] = 'All';
      $view->set_exposed_input($input);
    }
  }
}

/**
 * Implements hook_preprocess_THEMENAME()
 */
function message_library_exposedfilters_preprocess_current_selected_criteria(&$vars) {
  // Check if there isn't any search criteria specified
  $vars['has_criteria'] = FALSE;

  $check_keys = array(
    'ml_search_text',
    'issue',
    'at_risk_group',
    'target_audience',
    'threat'
  );

  foreach($check_keys as $key) {
    if (!empty($vars[$key])) {
      $vars['has_criteria'] = TRUE;
      break;
    }
  }

  // Add help box
  $box = module_invoke('boxes', 'block_view', 'ml_help_criteria');
  $vars['ml_help_criteria'] = $box['content'];
}

/**
 * Implements hook_form_alter()
 */
function message_library_exposedfilters_form_views_exposed_form_alter(&$form, &$form_state) {
  array_unshift($form['#submit'], 'message_library_exposedfilters_exposed_form_submit');
}

/**
 * Custom submit handler
 */
function message_library_exposedfilters_exposed_form_submit(&$form, &$form_state) {
  // Ugly quick fix, guess nobody will ever use 'enter search term' for search
  $values = $form_state['values'];
  if (!empty($values['ml_search_text']) && $values['ml_search_text'] == t('enter search terms')) {
    if (isset($form['ml_search_text'])) {
      $form['ml_search_text']['value'] = '';
    }
    $form_state['values']['ml_search_text'] = '';
  }
}


